(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{443:function(e,_,t){"use strict";t.r(_);var v=t(69),o=Object(v.a)({},(function(){var e=this,_=e.$createElement,t=e._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"react组件生命周期"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#react组件生命周期"}},[e._v("#")]),e._v(" React组件生命周期")]),e._v(" "),t("ul",[t("li",[e._v("组件从创建到死亡它会经历一些特定的阶段")]),e._v(" "),t("li",[e._v("React组件中包含一系列勾子函数(生命周期回调函数), 会在特定的时刻调用")]),e._v(" "),t("li",[e._v("我们在定义组件时，会在特定的生命周期回调函数中，做特定的工作")])]),e._v(" "),t("h2",{attrs:{id:"_3-1-生命周期"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-生命周期"}},[e._v("#")]),e._v(" 3.1 生命周期")]),e._v(" "),t("h3",{attrs:{id:"_3-1-1-生命周期的三个阶段-旧"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-1-生命周期的三个阶段-旧"}},[e._v("#")]),e._v(" 3.1.1 生命周期的三个阶段（旧）")]),e._v(" "),t("p",[t("img",{attrs:{src:"http://www.amphobia.cn/images/2_react%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F(%E6%97%A7).png",alt:"react生命周期(旧"}})]),e._v(" "),t("ol",[t("li",[t("p",[t("strong",[e._v("初始化阶段")]),e._v("：由"),t("code",[e._v("ReactDOM.render()")]),e._v("触发---初次渲染")]),e._v(" "),t("ol",[t("li",[t("code",[e._v("constructor()")])]),e._v(" "),t("li",[t("code",[e._v("componentWillMount()")]),e._v("："),t("em",[e._v("组件将要挂载")]),e._v(" "),t("ul",[t("li",[t("strong",{staticStyle:{color:"#DD5145"}},[e._v("通常进行初始化（开启定时器、发送网络请求、订阅消息）")])])])]),e._v(" "),t("li",[t("code",[e._v("render()")])]),e._v(" "),t("li",[t("code",[e._v("componentDidMount()")]),e._v("："),t("em",[e._v("组件挂载完毕")]),e._v(" "),t("ul",[t("li",[t("strong",{staticStyle:{color:"#DD5145"}},[e._v("通常进行收尾行为（关闭定时器、取消订阅消息）")])])])])])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("更新阶段")]),e._v("：由组件内部"),t("code",[e._v("this.setSate()")]),e._v("或父组件重新"),t("code",[e._v("render")]),e._v("触发")]),e._v(" "),t("ol",[t("li",[t("p",[t("code",[e._v("shouldComponentUpdate()")])]),e._v(" "),t("ul",[t("li",[t("p",[t("em",[e._v('相当于组件更新的"阀门"')])])]),e._v(" "),t("li",[t("p",[t("em",[e._v("默认返回的是true，返回false，组件不会执行更新操作")])])]),e._v(" "),t("li",[t("p",[t("em",[e._v("注意：当执行"),t("code",[e._v("forceUpdate()")]),e._v('时，会强制更新，不受"阀门"影响')])])])])]),e._v(" "),t("li",[t("p",[t("code",[e._v("componentWillUpdate()")]),e._v("："),t("em",[e._v("组件将要更新")])])]),e._v(" "),t("li",[t("p",[t("code",[e._v("render()")])])]),e._v(" "),t("li",[t("p",[t("code",[e._v("componentDidUpdate()")]),e._v("："),t("em",[e._v("组件更新完毕")])])])]),e._v(" "),t("p",[t("strong",[e._v("当存在父子组件传递props时")])]),e._v(" "),t("p",[t("code",[e._v("componentWillReceiveProps(props)")]),e._v("："),t("em",[e._v("第一次不会执行")])])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("卸载组件")]),e._v("：由"),t("code",[e._v("ReactDOM.unmountComponentAtNode()")]),e._v("触发")]),e._v(" "),t("ol",[t("li",[t("code",[e._v("componentWillUnmount()")]),e._v("："),t("em",[e._v("组件将要卸载")])])])])]),e._v(" "),t("h3",{attrs:{id:"_3-1-2-生命周期的三个阶段-新"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-2-生命周期的三个阶段-新"}},[e._v("#")]),e._v(" 3.1.2 生命周期的三个阶段（新）")]),e._v(" "),t("p",[t("img",{attrs:{src:"http://www.amphobia.cn/images/3_react%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F(%E6%96%B0).png",alt:"react生命周期(新)"}})]),e._v(" "),t("ol",[t("li",[t("p",[t("strong",[e._v("初始化阶段")]),e._v("：由"),t("code",[e._v("ReactDOM.render()")]),e._v("触发---初次渲染")]),e._v(" "),t("ol",[t("li",[t("code",[e._v("constructor()")])]),e._v(" "),t("li",[t("code",[e._v("getDerivedStateFromProps()")]),e._v("："),t("strong",{staticStyle:{color:"#DD5145"}},[e._v("新增")]),e._v(" "),t("ul",[t("li",[t("em",[e._v("若state的值在任何时候都取决于props，那么可以使用getDerivedStateFromProps")])])])]),e._v(" "),t("li",[t("code",[e._v("render()")])]),e._v(" "),t("li",[t("code",[e._v("componentDidMount()")]),e._v("："),t("em",[e._v("组件挂载完毕")])])])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("更新阶段")]),e._v("：由组件内部"),t("code",[e._v("this.setSate()")]),e._v("或父组件重新"),t("code",[e._v("render")]),e._v("触发")]),e._v(" "),t("ol",[t("li",[t("code",[e._v("getDerivedStateFromProps()")]),e._v("："),t("strong",{staticStyle:{color:"#DD5145"}},[e._v("新增")])]),e._v(" "),t("li",[t("code",[e._v("componentWillUpdate()")]),e._v("："),t("em",[e._v("组件将要更新")])]),e._v(" "),t("li",[t("code",[e._v("render()")])]),e._v(" "),t("li",[t("code",[e._v("getSnapshotBeforeUpdate()")]),e._v("："),t("strong",{staticStyle:{color:"#DD5145"}},[e._v("新增")]),e._v(" "),t("ul",[t("li",[t("em",[e._v("在更新之前获取“快照”")])]),e._v(" "),t("li")])]),e._v(" "),t("li",[t("code",[e._v("componentDidUpdate()")]),e._v("："),t("em",[e._v("组件更新完毕")])])])]),e._v(" "),t("li",[t("p",[t("strong",[e._v("卸载组件")]),e._v("：由"),t("code",[e._v("ReactDOM.unmountComponentAtNode()")]),e._v("触发")]),e._v(" "),t("ol",[t("li",[t("code",[e._v("componentWillUnmount()")]),e._v("："),t("em",[e._v("组件将要卸载")])])])])]),e._v(" "),t("h4",{attrs:{id:"即将废弃的生命周期"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#即将废弃的生命周期"}},[e._v("#")]),e._v(" 即将废弃的生命周期")]),e._v(" "),t("ul",[t("li",[t("p",[t("code",[e._v("componentWillMount()")])])]),e._v(" "),t("li",[t("p",[t("code",[e._v("componentWillReceiveProps()")])])]),e._v(" "),t("li",[t("p",[t("code",[e._v("componentWillUpdate()")])])])]),e._v(" "),t("blockquote",[t("p",[e._v("现在使用会出现警告，下一个大版本需要加上UNSAFE_前缀才能使用，以后可能会被彻底废弃，不建议使用")])]),e._v(" "),t("h2",{attrs:{id:"附录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#附录"}},[e._v("#")]),e._v(" 附录")]),e._v(" "),t("h3",{attrs:{id:"面试题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#面试题"}},[e._v("#")]),e._v(" 面试题")]),e._v(" "),t("p",[t("strong",{staticStyle:{color:"#f8cf70"}},[e._v("React/Vue中的key有什么作用？（key的内部原理是什么？）")])]),e._v(" "),t("p",[t("strong",{staticStyle:{color:"#f8cf70"}},[e._v("为什么遍历列表时，key最好不要用index?")])]),e._v(" "),t("ul",[t("li",[e._v("当状态中的数据发生变化时，react会根据【新数据】生成【新的虚拟DOM】，随后React进行【新虚拟DOM】与【旧虚拟DOM】的diff比较，比较规则如下：\n"),t("ul",[t("li",[e._v("旧虚拟DOM中找到了与新虚拟DOM相同的key：\n"),t("ul",[t("li",[e._v("若虚拟DOM中内容没变, 直接使用之前的真实DOM")]),e._v(" "),t("li",[e._v("若虚拟DOM中内容变了, 则生成新的真实DOM，随后替换掉页面中之前的真实DOM")])])]),e._v(" "),t("li",[e._v("旧虚拟DOM中未找到与新虚拟DOM相同的key\n"),t("ul",[t("li",[e._v("根据数据创建新的真实DOM，随后渲染到到页面")])])])])]),e._v(" "),t("li",[e._v("用index作为key可能会引发的问题：\n"),t("ul",[t("li",[e._v("若对数据进行：逆序添加、逆序删除等破坏顺序操作，会产生没有必要的真实DOM更新 ==> 界面效果没问题，但效率低。")]),e._v(" "),t("li",[e._v("如果结构中还包含输入类的DOM，会产生错误DOM更新 ==> 界面有问题。")]),e._v(" "),t("li",[e._v("如果不存在对数据的逆序添加、逆序删除等破坏顺序操作，仅用于渲染列表用于展示，使用index作为key是没有问题的。")])])])])])}),[],!1,null,null,null);_.default=o.exports}}]);